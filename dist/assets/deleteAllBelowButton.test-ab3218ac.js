import{r as k,g as a,c as o,b as w,l as B,o as T,d as $,h as V,p as z}from"./index-58265e4e.js";function i(e){return new Promise(n=>setTimeout(n,e))}async function m(e,n=5e3,r=50){const t=performance.now();for(;!e();){if(performance.now()-t>n)throw new Error("waitFor: timeout");await i(r)}}function q(){const e=document.querySelector(".main-content-area");return e?e.querySelector(".overflow-y-auto"):null}function l(){const e=q();return e?Array.from(e.querySelectorAll(".message")):[]}function E(e){return Array.from(e.querySelectorAll("details"))}function C(e){const n=Array.from(e.querySelectorAll("button"));for(const r of n){const t=r.querySelector("img");if(t&&t.src&&t.src.includes("deleteBelow"))return r}return null}function U(e){return e.querySelector(".message-display")?.textContent?.trim()||""}function P(e){const n=e.querySelector(".profile-picture img");return n?n.src.includes("UserIcon")?"user":n.src.includes("RobotIcon")?"assistant":null:null}function G(e){const n=new TextEncoder,r=new ReadableStream({start(t){for(const u of e){const v=`event: ${u.event}
data: ${JSON.stringify(u.data)}

`;t.enqueue(n.encode(v))}t.close()}});return new Response(r,{headers:{"Content-Type":"text/event-stream"}})}k({id:"delete-all-below-button-functionality",name:"Delete All Below: button deletes all messages and reasoning windows below clicked message",tags:["live","ui","delete"],timeoutMs:3e4,fn:async e=>{const n=a(o),r=a(w),t=a(B),u=a(T),v=a($),g=window.fetch?.bind(window);try{$.set("gpt-5-nano"),V.set("low"),o.set([{title:"Delete Below Test",assistantRole:"You are a helpful assistant.",conversationTokens:0,history:[]}]),w.set(0),B.set([]),T.set([]),await i(0),await m(()=>!!q(),5e3);const I=[];async function c(s,f,b=!0){o.update(h=>{const A=[...h];return A[0].history.push({role:"user",content:s}),A}),await i(100);const S=a(o)[0].history.length-1;I.push({index:S,role:"user",content:s,hasReasoning:!1});const R=[];b&&R.push({event:"response.reasoning_text.delta",data:{delta:"Thinking about: "}},{event:"response.reasoning_text.delta",data:{delta:s}},{event:"response.reasoning_text.done",data:{text:`Thinking about: ${s}`}});const N=f.split(" ");for(const h of N)R.push({event:"response.output_text.delta",data:{delta:h+" "}});R.push({event:"response.completed",data:{}}),window.fetch=(h,A)=>{const J=typeof h=="string"?h:h.url??String(h);return/\/v1\/responses$/.test(J)&&A?.method==="POST"?Promise.resolve(G(R)):g?g(h,A):Promise.reject(new Error("No fetch"))},await z(s,"gpt-5-nano",void 0,void 0,{convId:0,anchorIndex:S}),await i(200);const j=a(o)[0].history.length-1;I.push({index:j,role:"assistant",content:f,hasReasoning:b})}await c("First question","First AI response",!0),await c("Second question","Second AI response",!0),await c("Third question","Third AI response",!0),await c("Fourth question","Fourth AI response",!1),await m(()=>l().length===8,5e3);const d=l();e.that(d.length===8,`Should have 8 messages, got ${d.length}`);let p=0;for(let s=0;s<d.length;s++){const f=d[s],b=P(f),M=E(f);b==="user"&&s<6?(e.that(M.length===1,`Message ${s} should have reasoning window`),p++):e.that(M.length===0,`Message ${s} should not have reasoning window`)}e.that(p===3,`Should have 3 reasoning windows, got ${p}`);const _=d[2],x=C(_);e.that(!!x,"Delete all below button should exist on message");const Y=[0,1,2],Q=[3,4,5,6,7];x?.click(),await i(200),await m(()=>l().length===3,3e3);const y=l();e.that(y.length===3,`Should have 3 messages after deletion, got ${y.length}`);for(let s=0;s<y.length;s++){const f=y[s],b=U(f),M=P(f),S=I[Y[s]];e.that(M===S.role,`Message ${s} should be ${S.role}, got ${M}`),e.that(b.includes(S.content.split(" ")[0]),`Message ${s} content mismatch`)}const H=y[0],L=E(H);e.that(L.length===1,"First user message should still have reasoning window");const W=y[2],O=E(W);e.that(O.length===0,"Second user message should not have reasoning (was deleted with messages below)");const D=a(o)[0].history;e.that(D.length===3,`Store should have 3 messages, got ${D.length}`);const F=a(B).filter(s=>s.convId===0);e.that(F.length===1,`Should have 1 reasoning window remaining, got ${F.length}`)}finally{$.set(v),T.set(u),B.set(t),o.set(n),w.set(r),await i(0),g&&(window.fetch=g)}}});k({id:"delete-all-below-button-ui-presence",name:"Delete All Below: button appears with correct icon and tooltip",tags:["live","ui","delete"],timeoutMs:1e4,fn:async e=>{const n=a(o),r=a(w);try{o.set([{title:"UI Test",assistantRole:"You are a helpful assistant.",conversationTokens:0,history:[{role:"user",content:"Hello"},{role:"assistant",content:"Hi there!"},{role:"user",content:"How are you?"},{role:"assistant",content:"I am doing well!"}]}]),w.set(0),await i(0),await m(()=>!!q(),5e3),await m(()=>l().length===4,3e3);const t=l();for(let g=0;g<t.length-1;g++){const I=t[g],c=C(I);if(e.that(!!c,`Message ${g} should have delete-all-below button`),c){const d=c.getAttribute("title")||c.getAttribute("aria-label");e.that(d?.toLowerCase().includes("delete")&&d?.toLowerCase().includes("below"),`Button should have tooltip mentioning "delete" and "below", got: ${d}`);const p=c.querySelector("img");e.that(!!p,"Button should have an image icon"),e.that(p?.src?.includes("deleteBelow")||p?.alt?.toLowerCase().includes("delete"),"Button should use deleteBelow.svg icon")}}const u=t[t.length-1],v=C(u);e.that(!v,"Last message should not have delete-all-below button")}finally{o.set(n),w.set(r),await i(0)}}});k({id:"delete-all-below-edge-cases",name:"Delete All Below: handles edge cases correctly",tags:["live","ui","delete"],timeoutMs:15e3,fn:async e=>{const n=a(o),r=a(w);try{o.set([{title:"Edge Case Test",assistantRole:"You are a helpful assistant.",conversationTokens:0,history:[{role:"user",content:"Message 1"},{role:"assistant",content:"Response 1"},{role:"user",content:"Message 2"},{role:"assistant",content:"Response 2"}]}]),w.set(0),await i(0),await m(()=>l().length===4,3e3);let t=l();const u=C(t[0]);e.that(!!u,"First message should have delete-all-below button"),u?.click(),await i(200),await m(()=>l().length===1,3e3),t=l(),e.that(t.length===1,"Should have only 1 message after deleting all below first"),e.that(U(t[0]).includes("Message 1"),"First message should remain"),o.set([{title:"Empty Test",assistantRole:"You are a helpful assistant.",conversationTokens:0,history:[]}]),await i(100),t=l(),e.that(t.length===0,"Empty conversation should have no messages"),o.set([{title:"Single Message Test",assistantRole:"You are a helpful assistant.",conversationTokens:0,history:[{role:"user",content:"Only message"}]}]),await i(100),await m(()=>l().length===1,3e3),t=l();const v=C(t[0]);e.that(!v,"Single message should not have delete-all-below button")}finally{o.set(n),w.set(r),await i(0)}}});
