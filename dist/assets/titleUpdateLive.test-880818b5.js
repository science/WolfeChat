import{r as w,g as s,z as g,b as m,c as l,D as p}from"./index-58265e4e.js";function v(e){return new Promise(o=>setTimeout(o,e))}w({id:"live-title-update",name:"Live API: conversation title updates after first message",tags:["live","api","responses","network","smoke"],timeoutMs:45e3,fn:async e=>{const o=s(g);if(e.that(!!o,"API key is configured"),!o)return;const n=s(m),a=s(l);if(e.that(a&&a[n]!=null,"Current conversation exists"),!a||a[n]==null)return;l.update(t=>{const c=[...t],r={...c[n]};return r.title="",Array.isArray(r.history)&&(r.history=[]),c[n]=r,c});const u=(s(l)[n]?.title??"").trim();e.that(u==="",'Initial title is empty (renders as "New conversation")');const h=[{role:"user",content:"Please answer briefly. Then the app should generate a short title summarizing this new chat."}];try{await p(h,n)}catch(t){e.that(!1,`sendRegularMessage completed without throwing: ${t?.message??t}`);return}const d=Date.now()+3e4;let i="";for(;Date.now()<d;){const t=(s(l)[n]?.title??"").trim();if(t&&t.toLowerCase()!=="new conversation"){i=t;break}await v(500)}e.that(!!i,`Conversation title updated to a non-empty value (got: "${i}")`),e.that(i.toLowerCase()!=="new conversation",'Title is not the placeholder "New conversation"')}});
